jobs:
  - job: GitVersion_v6_same_job
    displayName: GitVersion v6 (same job)
    strategy:
      matrix:
        windows-latest:
          imageName: 'windows-latest'
        ubuntu-latest:
          imageName: 'ubuntu-latest'
        macos-latest:
          imageName: 'macos-15'
    pool:
      vmImage: $(imageName)
    steps:
      - checkout: self
        fetchDepth: 0

      - task: gittools.gittools-test.setup-gitversion-task.gitversion/setup@3.1.11
        displayName: Install GitVersion
        inputs:
          versionSpec: '6.0.x'
          includePrerelease: false

      - task: gittools.gittools-test.execute-gitversion-task.gitversion/execute@3.1.11
        name: version_step # step id used as reference for output values
        displayName: Use GitVersion
        inputs:
          useConfigFile: true
          configFilePath: 'GitVersion_v6.yml'
          overrideConfig: |
            update-build-number=false

      - pwsh: |
          echo "Major      (major)                 : $(major)"
          echo "Minor      (minor)                 : $(minor)"
          echo "Patch      (patch)                 : $(patch)"
          echo "SemVer     (semVer)                : $(semVer)"
          echo "FullSemVer (fullSemVer)            : $(fullSemVer)"
        displayName: Display GitVersion variables (without prefix)

      - pwsh: |
          echo "Major      (GitVersion_Major)      : $(GitVersion_Major)"
          echo "Minor      (GitVersion_Minor)      : $(GitVersion_Minor)"
          echo "Patch      (GitVersion_Patch)      : $(GitVersion_Patch)"
          echo "SemVer     (GitVersion_SemVer)     : $(GitVersion_SemVer)"
          echo "FullSemVer (GitVersion_FullSemVer) : $(GitVersion_FullSemVer)"
        displayName: Display GitVersion variables (with prefix)

      - pwsh: |
          echo "Major      (version_step.major)                 : $(version_step.major)"
          echo "Minor      (version_step.minor)                 : $(version_step.minor)"
          echo "Patch      (version_step.patch)                 : $(version_step.patch)"
          echo "SemVer     (version_step.semVer)                : $(version_step.semVer)"
          echo "FullSemVer (version_step.fullSemVer)            : $(version_step.fullSemVer)"
        displayName: Display GitVersion outputs (step output without prefix)

      - pwsh: |
          echo "Major      (version_step.GitVersion_Major)      : $(version_step.GitVersion_Major)"
          echo "Minor      (version_step.GitVersion_Minor)      : $(version_step.GitVersion_Minor)"
          echo "Patch      (version_step.GitVersion_Patch)      : $(version_step.GitVersion_Patch)"
          echo "SemVer     (version_step.GitVersion_SemVer)     : $(version_step.GitVersion_SemVer)"
          echo "FullSemVer (version_step.GitVersion_FullSemVer) : $(version_step.GitVersion_FullSemVer)"
        displayName: Display GitVersion outputs (step output with prefix)

      - pwsh: |
          echo "Major      (env:myvar_major)      : $env:myvar_major"
          echo "Minor      (env:myvar_minor)      : $env:myvar_minor"
          echo "Patch      (env:myvar_patch)      : $env:myvar_patch"
          echo "SemVer     (env:myvar_semVer)     : $env:myvar_semVer"
          echo "FullSemVer (env:myvar_fullSemVer) : $env:myvar_fullSemVer"
        displayName: Display mapped local env (pwsh - outputs without prefix)
        env:
          myvar_major: $(version_step.major)
          myvar_minor: $(version_step.minor)
          myvar_patch: $(version_step.patch)
          myvar_semVer: $(version_step.semVer)
          myvar_fullSemVer: $(version_step.fullSemVer)

      - pwsh: |
          echo "Major      (env:myvar_GitVersion_Major)      : $env:myvar_GitVersion_Major"
          echo "Minor      (env:myvar_GitVersion_Minor)      : $env:myvar_GitVersion_Minor"
          echo "Patch      (env:myvar_GitVersion_Patch)      : $env:myvar_GitVersion_Patch"
          echo "SemVer     (env:myvar_GitVersion_SemVer)     : $env:myvar_GitVersion_SemVer"
          echo "FullSemVer (env:myvar_GitVersion_FullSemVer) : $env:myvar_GitVersion_FullSemVer"
        displayName: Display mapped local env (pwsh - outputs with prefix)
        env:
          myvar_GitVersion_Major: $(version_step.GitVersion_Major)
          myvar_GitVersion_Minor: $(version_step.GitVersion_Minor)
          myvar_GitVersion_Patch: $(version_step.GitVersion_Patch)
          myvar_GitVersion_SemVer: $(version_step.GitVersion_SemVer)
          myvar_GitVersion_FullSemVer: $(version_step.GitVersion_FullSemVer)

      - bash: |
          echo "Major      (myvar_major)      : $myvar_major"
          echo "Minor      (myvar_minor)      : $myvar_minor"
          echo "Patch      (myvar_patch)      : $myvar_patch"
          echo "SemVer     (myvar_semVer)     : $myvar_semVer"
          echo "FullSemVer (myvar_fullSemVer) : $myvar_fullSemVer"
        displayName: Display mapped local env (bash - outputs without prefix)
        env:
          myvar_major: $(version_step.major)
          myvar_minor: $(version_step.minor)
          myvar_patch: $(version_step.patch)
          myvar_semVer: $(version_step.semVer)
          myvar_fullSemVer: $(version_step.fullSemVer)

      - bash: |
          echo "Major      (myvar_GitVersion_Major)      : $myvar_GitVersion_Major"
          echo "Minor      (myvar_GitVersion_Minor)      : $myvar_GitVersion_Minor"
          echo "Patch      (myvar_GitVersion_Patch)      : $myvar_GitVersion_Patch"
          echo "SemVer     (myvar_GitVersion_SemVer)     : $myvar_GitVersion_SemVer"
          echo "FullSemVer (myvar_GitVersion_FullSemVer) : $myvar_GitVersion_FullSemVer"
        displayName: Display mapped local env (bash - outputs with prefix)
        env:
          myvar_GitVersion_Major: $(version_step.GitVersion_Major)
          myvar_GitVersion_Minor: $(version_step.GitVersion_Minor)
          myvar_GitVersion_Patch: $(version_step.GitVersion_Patch)
          myvar_GitVersion_SemVer: $(version_step.GitVersion_SemVer)
          myvar_GitVersion_FullSemVer: $(version_step.GitVersion_FullSemVer)